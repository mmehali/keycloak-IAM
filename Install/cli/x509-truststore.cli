embed-server --server-config=standalone-ha.xml --std-out=discard

# ajouter dans :elytron:<tls>:<key-stores>
# <key-store name="kcTrustStore">
#    <credential-reference clear-text="keycloak_tls_truststore_password"/>
#    <implementation type="JKS"/>
#    <file path="keycloak_tls_truststore_file"/>
# </key-store>                
/subsystem=elytron/key-store=kcTrustStore:add(path=keycloak_tls_truststore_file,type=JKS,credential-reference={clear-text=keycloak_tls_truststore_password})

# ajouter dans :elytron:<tls>
# <trust-managers>
#   <trust-manager name="kcTrustManager" key-store="kcTrustStore"/>
# </trust-managers>

# ajouter dans :elytron:<tls>:
# <server-ssl-contexts>
#   <server-ssl-context name="kcSSLContext" want-client-auth="true" key-manager="kcKeyManager" trust-manager="kcTrustManager"/>
# </server-ssl-contexts>
/subsystem=elytron/trust-manager=kcTrustManager:add(key-store=kcTrustStore)
if (outcome != success) of /subsystem=elytron/server-ssl-context=kcSSLContext:read-resource
    # Since WF requires a Key Manager for creating /subsystem=elytron/server-ssl-context, there's nothing we can do at this point.
    # We can not automatically generate a self-signed key (Elytron doesn't support this, see https://docs.wildfly.org/13/WildFly_Elytron_Security.html#configure-ssltls),
    # and we don't have anything else at hand.
    # However, there is no big harm here - the Trust Store is more needed by Keycloak Truststore SPI.
    echo "WARNING! There is no Key Manager (No Key Store specified). Skipping HTTPS Listener configuration..."
else
    # The SSL Context has been added by keystore, not much to do - just append trust store and we are done.
    /subsystem=elytron/server-ssl-context=kcSSLContext:write-attribute(name=trust-manager, value=kcTrustManager)
    /subsystem=elytron/server-ssl-context=kcSSLContext:write-attribute(name=want-client-auth, value=true)
end-if

# Ajouter a keycloak-server
#  <spi name="truststore">
#    <provider name="file" enabled="true">
#       <properties>
#          <property name="file" value="keycloak_tls_truststore_file"/>
#          <property name="password" value="keycloak_tls_truststore_password"/>
#          <property name="hostname-verification-policy" value="WILDCARD"/>
#          <property name="disabled" value="false"/>
#        </properties>
#     </provider>
#   </spi>
if (outcome != success) of /subsystem=keycloak-server/spi=truststore:read-resource
    /subsystem=keycloak-server/spi=truststore/:add
end-if
/subsystem=keycloak-server/spi=truststore/provider=file/:add(enabled=true,properties={ \
    file => keycloak_tls_truststore_file, \
    password => keycloak_tls_truststore_password, \
    hostname-verification-policy => "WILDCARD", \
disabled => "false"})

stop-embedded-server
